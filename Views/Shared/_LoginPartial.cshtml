

@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul>
    @if (SignInManager.IsSignedIn(User))
    {
        <li>
            <a id="manage" class="nav-links" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li>
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logoutBtn" type="submit" style="display: none;"></button>
            </form>
        </li>

        <li>
            <a id="logout" href="javascript:void(0);" onclick="logout()">Logout</a>
        </li>
    }
    else
    {
        <li>
            <a id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li>
            <a id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

<script>
    function logout() {
        document.getElementById('logoutBtn').click();
    }
</script>